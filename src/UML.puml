@startuml

'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
Property -|> GameBoardSquare

enum Piece{
    -HORSE,SHOE,CAR,BOAT
}

enum PropertyType{
    -BROWN,LIGHTBLUE,PINK,ORANGE,RED,YELLOW,GREEN,BLUE,RAILROAD,UTILITY
}

enum SquareType{
    -PROPERTY,GO,FREEPARKING,JAIL,GOTOJAIL,TAX,EMPTY
}

class Player{
    -Piece playerPiece
    -int balance
    -HashMap<Property,Colour> properties
    -int currentPos
    -Boolean inJail
    -int turnsInJail
    + get() *
    + set() *
    + ArrayList<PropertyType> hasPropertySet()
    + void addProperty()
}

class Die{
    - {static} MAX = 6
    - {static} MIN = 1
    -int rollValue
    +roll()
    +getRollValue()
}

class Board{
    - int BOARDSIZE
    - gameBoardSquare[] board
    + addSquare()
}

class GameController{
    -Board board
    -die[2] dice
    -scanner in
    -Player[] players
    +void run()
    +void turn()
    +int rollDice()
    +void jailTurn()
    +void passGo()
    +void buyProperty()
    +void buyBuilding()
    +void payRent()
    +void payTax()
    +void goneBankrupt()
    +void win()
    +void printBoardState()

}

abstract class GameBoardSquare{
    -squareType type
    -String name
}

class Property {
    -int setSize
    -int cost
    -int buildingCost
    -int rent
    -PropertyType propertyType
    -int numBuildings
    -Player owner
    +get() *
    +buildingPurchased()

}


@enduml